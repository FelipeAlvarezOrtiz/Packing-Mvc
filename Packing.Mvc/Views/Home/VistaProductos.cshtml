@using Packing.Mvc.Models.Empresas
@{
    var Productos = ViewData["Productos"] as List<Producto>;
    var Grupos = ViewData["Grupos"] as List<GrupoProducto>;
    var Formatos = ViewData["Formatos"] as List<Formato>;
    var Presentaciones = ViewData["Presentaciones"] as List<Presentacion>;
}
<h2><i class="fas fa-boxes"></i>&nbsp;Lista de Productos</h2>
<hr/>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            @if (Productos.Any())
            {
                <table id="tablaProductos" class="table table-responsive-lg table-striped table-bordered">
                    <thead class="thead-dark">
                    <tr>
                        <th scope="col">Nombre</th>
                        <th class="priority5" scope="col">Formato</th>
                        <th class="priority4" scope="col">Grupo</th>
                        <th class="priority4" scope="col">Presentación</th>
                        <th scope="col" class="text-center">Acciones</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var Producto in Productos)
                    {
                        <tr>
                            <td>@Producto.NombreProducto</td>
                            <td class="priority5">@Producto.Formato.NombreFormato</td>
                            <td class="priority4">@Producto.Grupo.NombreGrupo</td>
                            <td class="priority4">@Producto.Presentacion.NombrePresentacion</td>
                            <td class="text-center">
                                <a class="btn-sm btn-info" asp-controller="VistaProductos" asp-action="VerProducto" asp-route-idProducto="@Producto.IdProducto">Ver</a>
                                @*<a class="btn-sm btn-info" asp-controller="VistaProductos" asp-action="EditarProducto" asp-route-idProducto="@Producto.IdProducto">Editar</a>*@
                                <a class="btn-sm btn-danger text-white" onclick="EliminarProducto(@Producto.IdProducto)">Borrar</a>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            }
            else
            {
                <div class="alert alert-warning text-center"><h4><i class="fas fa-info-circle"></i>&nbsp;No existen productos creados</h4></div>
            }
            <hr/>
        </div>
    </div>
    <br />
    <div class="row text-center">
        <div class="col-sm-12 col-md-6 col-lg-6">
            <a class="btn btn-info" asp-controller="Miscelaneos" asp-action="Index">&nbsp;Editar datos</a>
        </div>
        <div class="col-sm-12 col-md-6 col-lg-6">
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#modalCrearProducto">
                Crear nuevo producto
            </button>
        </div>
    </div>
    <hr />
</div>

<div class="modal fade" id="modalCrearProducto" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Nuevo producto</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row form-group">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="col-form-label">Nombre</label>
                            <input type="text" class="form-control" id="nombreNuevoProducto" required maxlength="25"/>
                        </div>
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="col-form-label">Formato</label>
                            <div class="input-group">
                                <select class="form-control" id="formatoSelected">
                                    @foreach (var formato in Formatos)
                                    {
                                        <option value="@formato.IdFormato">@formato.NombreFormato</option>
                                    }
                                </select>&nbsp;
                                <button class="btn btn-outline-info" id="botonNuevoFormato" onclick="$('#modalNuevoFormato').modal('show')"><i class="fas fa-plus-circle"></i></button>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="col-form-label">Grupo</label>
                            <div class="input-group">
                                <select class="form-control" id="grupoSelected">
                                    @foreach (var grupo in Grupos)
                                    {
                                        <option value="@grupo.IdGrupo">@grupo.NombreGrupo</option>
                                    }
                                </select>&nbsp;
                                <button class="btn btn-outline-info" id="botonNuevoGrupo" onclick="$('#modalNuevoGrupo').modal('show')"><i class="fas fa-plus-circle"></i></button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="col-form-label">Presentación</label>
                            <div class="input-group">
                                <select class="form-control" id="presentacionSelected">
                                    @foreach (var presentacion in Presentaciones)
                                    {
                                        <option value="@presentacion.IdPresentacion">@presentacion.NombrePresentacion</option>
                                    }
                                </select>&nbsp;
                                <button class="btn btn-outline-info" id="botonNuevaPresentacion" onclick="$('#modalNuevaPresentacion').modal('show')"><i class="fas fa-plus-circle"></i></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="GuardarNuevoProducto()">Guardar</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalNuevoGrupo" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Nuevo Grupo</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container-fluid">
                        <div class="row form-group">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-form-label" for="nuevoGrupoText" style="font-size: small;">Nuevo grupo (Ej. Zanahorias,Lechugas,etc.)</label>
                                    <input type="text" class="form-control" id="nuevoGrupoText" style="font-size: small;" required/>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-form-label" for="grupoImage" style="font-size: small;">Imagen del grupo de productos</label>
                                    <input id="grupoImage" type="file" accept=".jpg,.jpeg,.png" class="form-control-file"/>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    <button type="button" class="btn btn-primary" onclick="GuardarNuevoGrupo()">Guardar</button>
                </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalNuevoFormato" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Nuevo Formato</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row form-group">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="col-form-label" for="nuevoNombreFormato">Nombre</label>
                                <input class="form-control" type="text" id="nuevoNombreFormato" />
                            </div>
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="col-form-label" style="font-size: small;" for="nuevaUnidadPorFormato">Unidades por formato</label>
                                <input type="number" id="nuevaUnidadPorFormato" class="form-control" style="font-size: small;" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="GuardarNuevoFormato()">Guardar</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalNuevaPresentacion" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Nueva presentación</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row form-group">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="col-form-label" for="nuevoNombrePresentacion">Nombre de la nueva presentación</label>
                                <input class="form-control" type="text" id="nuevoNombrePresentacion" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="GuardarNuevaPresentacion()">Guardar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial"/>
    <script type="text/javascript">
        $(document).ready(function() {
            $('#tablaProductos').DataTable({
                responsive: true,
                order: [[0, 'desc']],
                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "Todo"]],
                stateSave: true,
                dom: 'Bfrtip',
                buttons: ['excel', 'pdf'],
                language: {
                    "url": "https://cdn.datatables.net/plug-ins/1.10.12/i18n/Spanish.json"
                }
            });
        });

        function GuardarNuevoGrupo() {
            let nuevoGrupo = $('#nuevoGrupoText').val();
            if (nuevoGrupo !== '') {
                $.ajax({
                    url: "@Url.Action("GuardarGrupo", "Grupos")",
                    type: "POST",
                    data: "{ \"NombreGrupo\" : \"" + nuevoGrupo + "\" }",
                    contentType: "application/json; charset=utf-8",
                    success: function() {
                        Swal.fire({
                            title: '¡Exito!',
                            text: 'Se ha guardado correctamente.',
                            icon: 'success',
                            confirmButtonText: 'Ok'
                        }).then(function() {
                            RefrescarGrupos();
                            $('#nuevoGrupoText').val('');
                            $("#modalNuevoGrupo").modal('hide');
                        });
                    },
                    error: function() {
                        Swal.fire({
                            title: 'Error!',
                            text: 'Ha ocurrido un error',
                            icon: 'error',
                            confirmButtonText: 'Ok'
                        });
                    }
                });
            } else {
                Swal.fire({
                    title: 'Error!',
                    text: 'No puede ingresar un grupo sin nombre',
                    icon: 'error',
                    confirmButtonText: 'Ok'
                });
            }
        }

        function GuardarNuevoFormato() {
            let nombreFormato = $("#nuevoNombreFormato").val();
            let unidadPorFormato = $("#nuevaUnidadPorFormato").val();
            if (nombreFormato !== '' || unidadPorFormato > 0) {
                $.ajax({
                    url: "@Url.Action("GuardarFormato", "Formatos")",
                    type: "POST",
                    data: "{ \"nombreFormato\" : \"" + nombreFormato + "\" , \"unidadesPorFormato\" : \"" + unidadPorFormato + "\" }",
                    contentType: "application/json; charset=utf-8",
                    success: function() {
                        $("#nuevoNombreFormato").val('');
                        $("#nuevaUnidadPorFormato").val('');
                        Swal.fire({
                            title: '¡Exito!',
                            text: 'Se ha guardado correctamente.',
                            icon: 'success',
                            confirmButtonText: 'Ok'
                        }).then(function() {
                            $("#modalNuevoFormato").modal('hide');
                            RefrescarFormatos();
                        });
                    },
                    error: function(response) {
                        Swal.fire({
                            title: 'Error!',
                            text: response.responseText,
                            icon: 'error',
                            confirmButtonText: 'Ok'
                        });
                    }
                });
            } else {
                Swal.fire({
                    title: 'Error!',
                    text: 'Verifique los campos.',
                    icon: 'error',
                    confirmButtonText: 'Ok'
                });
            }
        }

        function GuardarNuevaPresentacion() {
            let nombrePresentacion = $("#nuevoNombrePresentacion").val();
            if (nombrePresentacion !== '') {
                $.ajax({
                    url: "@Url.Action("InsertarPresentacion", "Presentaciones")",
                    type: "POST",
                    data: "{\"NombrePresentacion\": \" " + nombrePresentacion +" \"}",
                    contentType: "application/json; charset=utf-8",
                    success: function() {
                        Swal.fire({
                            title: '¡Exito!',
                            text: 'Se ha guardado correctamente.',
                            icon: 'success',
                            confirmButtonText: 'Ok'
                        }).then(function() {
                            $("#nuevoNombrePresentacion").val('');
                            $("#modalNuevaPresentacion").modal('hide');
                            RefrescarPresentaciones();
                        });
                    },
                    error: function(response) {
                        Swal.fire({
                            title: 'Error!',
                            text: response.responseText,
                            icon: 'error',
                            confirmButtonText: 'Ok'
                        });
                    }
                });
            } else {
                Swal.fire({
                    title: 'Error!',
                    text: 'No puede ingresar una presentación sin nombre.',
                    icon: 'error',
                    confirmButtonText: 'Ok'
                });
            }
        }

        function GuardarNuevoProducto() {
            let nombreProducto = $("#nombreNuevoProducto").val();
            if (nombreProducto !== '') {
                let formatoSelected = $("#formatoSelected").val();
                let grupoSelected = $("#grupoSelected").val();
                let presentacionSelected = $("#presentacionSelected").val();
                let dataString = "{ \"nombreProducto\" : \"" + nombreProducto + "\", \"idFormato\" : " + formatoSelected + ", \"idGrupo\" : " + grupoSelected + ", \"idPresentacion\" : " + presentacionSelected + " }";
                $.ajax({
                    url: "@Url.Action("GuardarProducto", "Productos")",
                    type: "POST",
                    data: dataString,
                    contentType: "application/json; charset=utf-8",
                    success: function() {
                        $("#nombreNuevoProducto").val('');
                        $("#modalCrearProducto").modal('hide');
                        Swal.fire({
                            title: '¡Exito!',
                            text: 'Se ha guardado el producto correctamente.',
                            icon: 'success',
                            confirmButtonText: 'Ok'
                        }).then(function() {
                            location.reload();
                        });
                    },
                    error: function(response) {
                        console.log(response);
                        Swal.fire({
                            title: 'Error!',
                            text: response.responseText,
                            icon: 'error',
                            confirmButtonText: 'Ok'
                        });
                    }
                });
            } else {
                Swal.fire({
                    title: 'Error!',
                    text: 'El nombre del producto no puede ser vacio.',
                    icon: 'error',
                    confirmButtonText: 'Ok'
                });
            }
        }

        function RefrescarFormatos() {
            $.ajax({
                url: "@Url.Action("ObtenerFormatos", "Formatos")",
                type: "POST",
                data: "",
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    let results = $.parseJSON(JSON.stringify(data));
                    document.getElementById('formatoSelected').innerHTML = "";
                    console.table(results);
                    $.each(results,
                        function(i, d) {
                            $('#formatoSelected').append('<option value = "' + d.idFormato + '">' + d.nombreFormato + '</option>');
                        });
                },
                error: function(response) {
                    Swal.fire({
                        title: 'Error!',
                        text: response.responseText,
                        icon: 'error',
                        confirmButtonText: 'Ok'
                    });
                }
            });
        }

        function RefrescarPresentaciones() {
            $.ajax({
                url: "@Url.Action("ObtenerPresentaciones", "Presentaciones")",
                type: "POST",
                data: "",
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    let results = $.parseJSON(JSON.stringify(data));
                    document.getElementById('presentacionSelected').innerHTML = "";
                    console.table(results);
                    $.each(results,
                        function(i, d) {
                            $('#presentacionSelected').append('<option value = "' + d.idPresentacion + '">' + d.nombrePresentacion + '</option>');
                        });
                },
                error: function(response) {
                    Swal.fire({
                        title: 'Error!',
                        text: response.responseText,
                        icon: 'error',
                        confirmButtonText: 'Ok'
                    });
                }
            });
        }

        function RefrescarGrupos() {
            $.ajax({
                url: "@Url.Action("ObtenerGrupos", "Grupos")",
                type: "POST",
                data: "",
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    let results = $.parseJSON(JSON.stringify(data));
                    document.getElementById('grupoSelected').innerHTML = "";
                    $.each(results,
                        function(i, d) {
                            $('#grupoSelected').append('<option value = "' + d.idGrupo + '">' + d.nombreGrupo + '</option>');
                        });
                },
                error: function(response) {
                    Swal.fire({
                        title: 'Error!',
                        text: response.responseText,
                        icon: 'error',
                        confirmButtonText: 'Ok'
                    });
                }
            });
        }

        function EliminarProducto(idProducto) {
            Swal.fire({
                title: 'Confirmación',
                text: "Se va a eliminar este producto, ¿está seguro que desea continuar?.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Solicitar actualización',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "@Url.Action("EliminarProducto", "Productos")",
                        type: "POST",
                        data: "{ \"IdProducto\" : "+idProducto+" }",
                        contentType: "application/json; charset=utf-8",
                        success: function() {
                            Swal.fire({
                                title: '¡Exito!',
                                text: 'Se ha eliminado el producto.',
                                icon: 'success',
                                confirmButtonText: 'Ok'
                            }).then(function() {
                                location.reload();
                            });
                        },
                        error: function(response) {
                            Swal.fire({
                                title: '¡Error!',
                                text: response.responseText,
                                icon: 'error',
                                confirmButtonText: 'Ok'
                            });
                        }
                    });
                }
            });
        }

    </script>
}